# Generated by Django 2.0.3 on 2018-04-08 09:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affecter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Allouer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qteUtilise', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Benevole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('dateNaissance', models.DateField(null=True)),
                ('sexe', models.CharField(choices=[('F', 'Feminin'), ('M', 'Masculin')], max_length=1)),
                ('adresse', models.CharField(max_length=50, null=True)),
                ('codePostal', models.CharField(max_length=5, null=True)),
                ('ville', models.CharField(max_length=50, null=True)),
                ('telephoneFixe', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('telephonePortable', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('A', 'Administrateur'), ('O', 'Organisateur'), ('B', 'Benevole')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Caracteriser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nbrParticipant', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50)),
                ('ageMin', models.PositiveSmallIntegerField()),
                ('ageMax', models.PositiveSmallIntegerField()),
                ('sexe', models.CharField(choices=[('F', 'Feminin'), ('M', 'Masculin')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Intervenant',
            fields=[
                ('siret', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('raisonSocial', models.CharField(max_length=50, null=True)),
                ('type', models.CharField(max_length=50, null=True)),
                ('adresse', models.CharField(max_length=200, null=True)),
                ('codePostal', models.CharField(max_length=5, null=True)),
                ('ville', models.CharField(max_length=50, null=True)),
                ('telephoneFixe', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('telephonePort', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Intervenir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devis', models.CharField(max_length=150)),
                ('prixDevis', models.PositiveIntegerField()),
                ('fk_intervenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Intervenant')),
            ],
        ),
        migrations.CreateModel(
            name='Materiel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('qteTotal', models.PositiveIntegerField()),
                ('lieuStockage', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('siret', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('raisonSocial', models.CharField(max_length=50, null=True)),
                ('adresse', models.CharField(max_length=200, null=True)),
                ('codePostal', models.CharField(max_length=5, null=True)),
                ('ville', models.CharField(max_length=50, null=True)),
                ('telephoneFixe', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('telephonePortable', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator('^((\\+)33|0)[1-9](\\d{2}){4}', message='Le format du téléphone est incorrect')])),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsoriser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation', models.PositiveIntegerField()),
                ('fk_sponsoriser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Sponsor')),
            ],
        ),
        migrations.CreateModel(
            name='Tache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomTache', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=500)),
                ('dateDebut', models.DateField()),
                ('dateFin', models.DateField()),
                ('dateRappel', models.DateField(null=True)),
                ('niveauAvancement', models.CharField(choices=[('P', 'Plannifié'), ('E', 'En cours'), ('V', 'Validé')], max_length=1)),
                ('niveauPriorite', models.CharField(choices=[('0', 'Aucune'), ('1', 'Faible'), ('2', 'Moyen'), ('3', 'Important')], max_length=1)),
                ('fk_benevole', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='irontask_app.Benevole')),
            ],
        ),
        migrations.CreateModel(
            name='Triathlon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heureDepart', models.TimeField()),
                ('codePostal', models.CharField(max_length=5)),
                ('adresse', models.CharField(max_length=50)),
                ('ville', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeTriathlon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50)),
                ('distanceNatation', models.PositiveIntegerField()),
                ('distanceCyclisme', models.PositiveIntegerField()),
                ('distanceCourseAPied', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='triathlon',
            name='fk_TypeTriathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='irontask_app.TypeTriathlon'),
        ),
        migrations.AddField(
            model_name='tache',
            name='fk_triathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='irontask_app.Triathlon'),
        ),
        migrations.AddField(
            model_name='sponsoriser',
            name='fk_triathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Triathlon'),
        ),
        migrations.AddField(
            model_name='intervenir',
            name='fk_triathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Triathlon'),
        ),
        migrations.AddField(
            model_name='caracteriser',
            name='fk_categorie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Categorie'),
        ),
        migrations.AddField(
            model_name='caracteriser',
            name='fk_triathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Triathlon'),
        ),
        migrations.AddField(
            model_name='allouer',
            name='fk_benevole',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Benevole'),
        ),
        migrations.AddField(
            model_name='allouer',
            name='fk_materiel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Materiel'),
        ),
        migrations.AddField(
            model_name='allouer',
            name='fk_triathlon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Triathlon'),
        ),
        migrations.AddField(
            model_name='affecter',
            name='fk_benevole',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Benevole'),
        ),
        migrations.AddField(
            model_name='affecter',
            name='fk_tache',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='irontask_app.Tache'),
        ),
        migrations.AlterUniqueTogether(
            name='allouer',
            unique_together={('fk_triathlon', 'fk_benevole')},
        ),
    ]
